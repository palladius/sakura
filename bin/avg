#!/usr/bin/perl

	# Author: Riccardo Carlesso
	# License: GPL
	# Computes sum, avg, sigma^2 and cardinality of a series.
  # Amazing yet simple script/
  #
  # eg: echo -en "40\n44\n" | avg

use List::Util qw[min max];
use Scalar::Util qw(looks_like_number);

use strict;

my $n=0; # contatore
my $t=0; # sum
my $V=0; # sum squares
my $min; # minimum
my $max; # max

# while processing
while (<>) {
 $n++; # opinable if I should increment this over non-numeric strings...
 $t += $_;
 $V += $_ * $_;
 # if not a number, I have to skip this... or MIN is angry
 if(looks_like_number($_)) {
   if (! $min) { $min=$_; } else { $min=min($min,$_); }
   if (! $max) { $max=$_; } else { $max=max($max,$_); }
 }
}

# post processing
my $mu=sprintf("%.9f",$t/$n);
my $sigma;
if ($V/$n-$mu*$mu < 0) { # impossibile matematicamente ma computazionalmente ahime'...
	$sigma=0;
} else {
	$sigma=sprintf("%.9f",sqrt($V/$n-$mu*$mu));
}
chomp $max;
chomp $min;
print "sum: $t\navg: $mu\nsig: $sigma\nmin: $min\nmax: $max\nTOT: $n\n";
